-- =================================
-- üå∏ Enhanced Photo Features Migration
-- Add new columns and features to virtuous_photos table
-- =================================

-- Add new columns to virtuous_photos table
ALTER TABLE virtuous_photos 
ADD COLUMN IF NOT EXISTS category VARCHAR(50) DEFAULT 'darshan' AFTER description,
ADD COLUMN IF NOT EXISTS tags TEXT AFTER category,
ADD COLUMN IF NOT EXISTS view_count INT DEFAULT 0 AFTER tags,
ADD COLUMN IF NOT EXISTS upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP AFTER view_count,
ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP AFTER upload_date,
ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT TRUE AFTER updated_at;

-- Create index for better performance
CREATE INDEX IF NOT EXISTS idx_virtuous_photos_category ON virtuous_photos(category);
CREATE INDEX IF NOT EXISTS idx_virtuous_photos_active ON virtuous_photos(is_active);
CREATE INDEX IF NOT EXISTS idx_virtuous_photos_upload_date ON virtuous_photos(upload_date);
CREATE INDEX IF NOT EXISTS idx_virtuous_photos_view_count ON virtuous_photos(view_count);

-- Update existing photos with default values
UPDATE virtuous_photos 
SET 
    category = 'darshan',
    tags = '‡§¶‡§∞‡•ç‡§∂‡§®, ‡§Ü‡§ß‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ, ‡§∂‡§æ‡§Ç‡§§‡•Ä',
    upload_date = NOW(),
    is_active = TRUE
WHERE category IS NULL OR category = '';

-- Create photo categories table (optional - for future use)
CREATE TABLE IF NOT EXISTS photo_categories (
    id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Insert default categories
INSERT IGNORE INTO photo_categories (id, name, description) VALUES
('darshan', '‡§¶‡§∞‡•ç‡§∂‡§®', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§æ‡§µ‡§® ‡§¶‡§∞‡•ç‡§∂‡§®'),
('satsang', '‡§∏‡§§‡•ç‡§∏‡§Ç‡§ó', '‡§∏‡§§‡•ç‡§∏‡§Ç‡§ó ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ'),
('festivals', '‡§∏‡§£', '‡§ß‡§æ‡§∞‡•ç‡§Æ‡§ø‡§ï ‡§∏‡§£ ‡§Ü‡§£‡§ø ‡§â‡§§‡•ç‡§∏‡§µ'),
('ashram', '‡§Ü‡§∂‡•ç‡§∞‡§Æ', '‡§Ü‡§∂‡•ç‡§∞‡§Æ‡§æ‡§ö‡•á ‡§¶‡•É‡§∂‡•ç‡§Ø'),
('devotees', '‡§≠‡§ï‡•ç‡§§‡§ó‡§£', '‡§≠‡§ï‡•ç‡§§‡§ó‡§£‡§æ‡§Ç‡§ö‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ'),
('nature', '‡§®‡§ø‡§∏‡§∞‡•ç‡§ó', '‡§Ü‡§ß‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ‡§ø‡§ï ‡§®‡§ø‡§∏‡§∞‡•ç‡§ó ‡§¶‡•É‡§∂‡•ç‡§Ø');

-- Create photo views tracking table (optional - for analytics)
CREATE TABLE IF NOT EXISTS photo_views (
    id INT AUTO_INCREMENT PRIMARY KEY,
    photo_id INT NOT NULL,
    ip_address VARCHAR(45),
    user_agent TEXT,
    viewed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (photo_id) REFERENCES virtuous_photos(id) ON DELETE CASCADE
);

-- Create index for photo views
CREATE INDEX IF NOT EXISTS idx_photo_views_photo_id ON photo_views(photo_id);
CREATE INDEX IF NOT EXISTS idx_photo_views_viewed_at ON photo_views(viewed_at);

-- Create photo favorites table (optional - for future use)
CREATE TABLE IF NOT EXISTS photo_favorites (
    id INT AUTO_INCREMENT PRIMARY KEY,
    photo_id INT NOT NULL,
    user_id VARCHAR(100),
    favorited_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (photo_id) REFERENCES virtuous_photos(id) ON DELETE CASCADE,
    UNIQUE KEY unique_user_photo (photo_id, user_id)
);

-- Create index for photo favorites
CREATE INDEX IF NOT EXISTS idx_photo_favorites_photo_id ON photo_favorites(photo_id);
CREATE INDEX IF NOT EXISTS idx_photo_favorites_user_id ON photo_favorites(user_id);

-- Add sample data for testing (optional)
INSERT IGNORE INTO virtuous_photos (image_path, title, description, alt_text, category, tags, is_active) VALUES
('/static/images/virtue1.jpg', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§π‡§ø‡§≤‡•á ‡§¶‡§∞‡•ç‡§∂‡§®', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§æ‡§µ‡§® ‡§¶‡§∞‡•ç‡§∂‡§® - ‡§Ü‡§ß‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ‡§ø‡§ï ‡§™‡•ç‡§∞‡•á‡§∞‡§£‡§æ ‡§Ü‡§£‡§ø ‡§∂‡§æ‡§Ç‡§§‡•Ä‡§ö‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§¶‡§∞‡•ç‡§∂‡§® 1', 'darshan', '‡§¶‡§∞‡•ç‡§∂‡§®, ‡§Ü‡§ß‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ, ‡§∂‡§æ‡§Ç‡§§‡•Ä', TRUE),
('/static/images/virtue2.jpg', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§¶‡•Å‡§∏‡§∞‡•á ‡§¶‡§∞‡•ç‡§∂‡§®', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§æ‡§µ‡§® ‡§¶‡§∞‡•ç‡§∂‡§® - ‡§≠‡§ï‡•ç‡§§‡•Ä ‡§Ü‡§£‡§ø ‡§™‡•ç‡§∞‡•á‡§Æ‡§æ‡§ö‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§¶‡§∞‡•ç‡§∂‡§® 2', 'darshan', '‡§¶‡§∞‡•ç‡§∂‡§®, ‡§≠‡§ï‡•ç‡§§‡•Ä, ‡§™‡•ç‡§∞‡•á‡§Æ', TRUE),
('/static/images/virtue3.jpg', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§§‡§ø‡§∏‡§∞‡•á ‡§¶‡§∞‡•ç‡§∂‡§®', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§æ‡§µ‡§® ‡§¶‡§∞‡•ç‡§∂‡§® - ‡§ú‡•ç‡§û‡§æ‡§® ‡§Ü‡§£‡§ø ‡§™‡•ç‡§∞‡§ï‡§æ‡§∂‡§æ‡§ö‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§¶‡§∞‡•ç‡§∂‡§® 3', 'darshan', '‡§¶‡§∞‡•ç‡§∂‡§®, ‡§ú‡•ç‡§û‡§æ‡§®, ‡§™‡•ç‡§∞‡§ï‡§æ‡§∂', TRUE),
('/static/images/virtue4.jpg', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§ö‡•å‡§•‡•á ‡§¶‡§∞‡•ç‡§∂‡§®', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§æ‡§µ‡§® ‡§¶‡§∞‡•ç‡§∂‡§® - ‡§ï‡§∞‡•Å‡§£‡§æ ‡§Ü‡§£‡§ø ‡§¶‡§Ø‡§æ', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§¶‡§∞‡•ç‡§∂‡§® 4', 'darshan', '‡§¶‡§∞‡•ç‡§∂‡§®, ‡§ï‡§∞‡•Å‡§£‡§æ, ‡§¶‡§Ø‡§æ', TRUE),
('/static/images/virtue5.jpg', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§æ‡§ö‡§µ‡•á ‡§¶‡§∞‡•ç‡§∂‡§®', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§æ‡§µ‡§® ‡§¶‡§∞‡•ç‡§∂‡§® - ‡§Ü‡§®‡§Ç‡§¶ ‡§Ü‡§£‡§ø ‡§â‡§§‡•ç‡§∏‡§æ‡§π', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§¶‡§∞‡•ç‡§∂‡§® 5', 'darshan', '‡§¶‡§∞‡•ç‡§∂‡§®, ‡§Ü‡§®‡§Ç‡§¶, ‡§â‡§§‡•ç‡§∏‡§æ‡§π', TRUE),
('/static/images/virtue6.jpg', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§∏‡§π‡§æ‡§µ‡•á ‡§¶‡§∞‡•ç‡§∂‡§®', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§™‡§æ‡§µ‡§® ‡§¶‡§∞‡•ç‡§∂‡§® - ‡§∂‡§ï‡•ç‡§§‡•Ä ‡§Ü‡§£‡§ø ‡§ä‡§∞‡•ç‡§ú‡§æ', '‡§∏‡§¶‡•ç‡§ó‡•Å‡§∞‡•Ç‡§Ç‡§ö‡•á ‡§¶‡§∞‡•ç‡§∂‡§® 6', 'darshan', '‡§¶‡§∞‡•ç‡§∂‡§®, ‡§∂‡§ï‡•ç‡§§‡•Ä, ‡§ä‡§∞‡•ç‡§ú‡§æ', TRUE);

-- Create a view for easy photo statistics
CREATE OR REPLACE VIEW photo_statistics AS
SELECT 
    COUNT(*) as total_photos,
    COUNT(CASE WHEN is_active = TRUE THEN 1 END) as active_photos,
    COUNT(CASE WHEN category = 'darshan' THEN 1 END) as darshan_photos,
    COUNT(CASE WHEN category = 'satsang' THEN 1 END) as satsang_photos,
    COUNT(CASE WHEN category = 'festivals' THEN 1 END) as festival_photos,
    COUNT(CASE WHEN category = 'ashram' THEN 1 END) as ashram_photos,
    COUNT(CASE WHEN category = 'devotees' THEN 1 END) as devotee_photos,
    COUNT(CASE WHEN category = 'nature' THEN 1 END) as nature_photos,
    SUM(view_count) as total_views,
    AVG(view_count) as avg_views,
    MAX(view_count) as max_views,
    MIN(upload_date) as oldest_photo,
    MAX(upload_date) as newest_photo
FROM virtuous_photos;

-- Create a stored procedure for updating view count
DELIMITER //
CREATE PROCEDURE IF NOT EXISTS IncrementPhotoView(IN photo_id INT)
BEGIN
    UPDATE virtuous_photos 
    SET view_count = view_count + 1 
    WHERE id = photo_id AND is_active = TRUE;
END //
DELIMITER ;

-- Create a function to get photo category name
DELIMITER //
CREATE FUNCTION IF NOT EXISTS GetCategoryName(category_id VARCHAR(50))
RETURNS VARCHAR(100)
READS SQL DATA
DETERMINISTIC
BEGIN
    DECLARE category_name VARCHAR(100);
    
    SELECT name INTO category_name 
    FROM photo_categories 
    WHERE id = category_id;
    
    IF category_name IS NULL THEN
        SET category_name = category_id;
    END IF;
    
    RETURN category_name;
END //
DELIMITER ;

-- Add comments for documentation
ALTER TABLE virtuous_photos COMMENT = 'Enhanced virtuous photos with categories, tags, and view tracking';
ALTER TABLE photo_categories COMMENT = 'Photo categories for organization';
ALTER TABLE photo_views COMMENT = 'Photo view tracking for analytics';
ALTER TABLE photo_favorites COMMENT = 'User photo favorites';

-- Show migration results
SELECT 'Migration completed successfully!' as status;
SELECT COUNT(*) as total_photos FROM virtuous_photos;
SELECT COUNT(*) as total_categories FROM photo_categories;